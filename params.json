{"name":"Nograb","tagline":"JQuery plug-in that replaces img tags with divs to prevent easy download.","body":"nograb (works with JQuery 1.6.4 and higher)\r\n======\r\n\r\nJQuery plug-in that replaces img tags with divs to prevent easy download.  It only works with img tags and not type=\"image\". \r\n\r\n## Why did I create this?\r\n\r\nI am guessing someone out there wants to make scraping their site more difficult.  So, this was my solution.\r\n\r\n## But I can still parse out the images!\r\n\r\n\r\nYes.   That is correct.   However, this plugin was made to make it harder not impossible to scrape images.\r\n\r\n\r\n# Usage\r\n\r\nYou can use any selector to grab the img elements that you want nograb to be applied to.  \r\nFor example\r\nLet's say you want to apply nograb to the following:\r\n\r\n`<img id='profile-pic'  src=\"somepic.jpg\" >`\r\n\r\nYour selector can be:\r\n```javascript\r\n\t$('#profile-pic').nograb();\r\n```\r\n\r\nIf you don't want to use a class, you can apply the 'nograb' markup attribute like the following example.\r\n\r\n`<img nograb src=\"somepic.jpg\" >`\r\n\r\nThen, you can call either of the following:\r\n\r\n```javascript\r\n\t$.nograb();\r\n```\r\nOr\r\n\r\n```javascript\r\n\t$('img[nograb]').nograb();  ///More explicit but not needed because of the above example.\r\n```\r\n\r\nJSFIDDLE example: \r\nhttp://jsfiddle.net/jfhw7/","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}